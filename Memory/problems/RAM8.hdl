/**
 * Register file or memory containing 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load == 1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 * 
 * Design from the book "The Elements of Computing Systems"
 * by Nisan and Schocken, MIT Press.
 * 
 * Author: Naga Kandasamy
 * Date created: July 12, 2020
 * 
 * Student name(s): Zach Hammad
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    // Implementation tip: Feed the in value simultaneously to all the registers. 
    // Use mux / demux chips to select the register specified by address.
    PARTS:
    DMux8Way(in=load, sel=address, a=l1, b=l2, c=l3, d=l4, e=l5, f=l6, g=l7, h=l8);
    Register(in=in, load=l1, out=o1);
    Register(in=in, load=l2, out=o2);
    Register(in=in, load=l3, out=o3);
    Register(in=in, load=l4, out=o4);
    Register(in=in, load=l5, out=o5);
    Register(in=in, load=l6, out=o6);
    Register(in=in, load=l7, out=o7);
    Register(in=in, load=l8, out=o8);
    Mux8Way16(a=o1, b=o2, c=o3, d=o4, e=o5, f=o6, g=o7, h=o8, sel=address, out=out);
}